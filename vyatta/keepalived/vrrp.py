#! /usr/bin/env python3

# Copyright (c) 2020 AT&T Intellectual Property.
# All rights reserved.
# SPDX-License-Identifier: GPL-2.0-only


from typing import Dict


class VrrpGroup:
    """
    Simple VRRP group representation

    Used to represent the keepalived config for each individual
    VRRP group
    """

    def __init__(self, name: str, delay: str, group_config: Dict):
        """
        Constructor for the class

        Arguments:
            name (str):
                Name of the interface the VRRP group is configured on
            delay (str):
                Start delay configured for the interface
            group_config (Dict):
                YANG Dictionary for the group's config
        """
        # Default values from existing code required for minimal
        # config
        self._group_config = group_config
        if "priority" not in self._group_config:
            self._group_config["priority"] = 100
        if "advertise-interval" not in self._group_config \
                and self._group_config["version"] == 2:
            self._group_config["adv"] = 1
        else:
            self._group_config["adv"] = \
                group_config["advertise-interval"]
            del(self._group_config["advertise-interval"])

        # Values outwith the dictionary
        self._group_config["intf"] = name
        self._group_config["delay"] = delay
        self._group_config["state"] = "BACKUP"

        # Autogenerated values from minimal config
        self._group_config["vrid"] = group_config["tagnode"]
        self._group_config["accept"] = group_config["accept"]

        self._group_config["vips"] = "\n".join(
            group_config["virtual-address"])
        del(self._group_config["virtual-address"])

        # Template required for minimal config
        self._template = """
vrrp_instance {instance} {{
    state {state}
    interface {intf}
    virtual_router_id {tagnode}
    version {version}
    start_delay {delay}
    priority {priority}
    advert_int {adv}
    virtual_ipaddress {{
        {vips}
    }}
"""

        # Generate instance name (TODO change to f-string with python 3.7)
        self._instance = "vyatta-{intf}-{vrid}".format(
            intf=name, vrid=group_config["tagnode"]
        )
        self._group_config["instance"] = self._instance

        self._template += "}}"

    @property
    def instance_name(self):
        """Name of this group in the config file"""
        return self._instance

    def __repr__(self):
        completed_config = self._template.format(
            **self._group_config
        )
        return completed_config
